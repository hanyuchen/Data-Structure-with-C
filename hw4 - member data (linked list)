//
//  main.c
//  member data
//
//  Created by Erica on 2016/8/27.
//  Copyright © 2016年 Erica. All rights reserved.
//

#include<stdio.h>
#include<stdlib.h>
#include<string.h>

struct LkLst
{
    int data;
    struct LkLst *next;
};
typedef struct LkLst node;


node *getnode () /* This function create a new node */
{
    node *p;
    p = (node *) malloc(sizeof(node));
    /* malloc 會動態地配置大小為sizeof 的記憶體*/
    /* sizeof 會傳回一個型態為node之值*/
    if ( p == NULL)
    {
        printf ("記憶體不足");
        exit(1);
    }
    return(p);
}

void freenode (node *p) /* 此函數將節點還給記憶體 */
{
    free(p);
}


node *insert_node (node *head, node *ptr, node data)
{
    node *new_node;            /* 新節點指標變數 */
    new_node = getnode();    /* 建立新節點,取得一個可用節點 */
    *new_node = data;          /* 建立節點內容 */
    new_node->next = NULL; /* 設定指標初值 */
    
    if ( ptr == NULL ) /* 指標ptr是否是NULL */
    {
        /* 第一種情況: 插入第一個節點 */
        new_node->next = head; /* 新節點成為串列開始 */
        head = new_node;
    }
    else
    {
        if ( ptr->next == NULL ) /* 是否是串列結束 */
        /* 第二種情況: 插入最後一個節點 */
            ptr->next = new_node; /* 最後指向新節點 */
        else
        {
            /* 第三種情況: 插入成為中間節點 */
            new_node->next = ptr->next; /* (3) 新節點指向下一節點 (3)*/
            ptr->next = new_node; /* 節點ptr指向新節點 (4)*/
        }
    }
    return (head);
}


int main()
{
    node *head, *ptr;
    node indata;
    head = NULL;
    int pos, i;
    char sel;
    char input[80];
    
    while(1){

        
        
        scanf(" %c", &sel);
        switch(sel)
        {
            case 'a':
                //	printf("請輸入姓名：");
                scanf("%s", &indata.name);
                if(head == NULL){	//建立第一個節點
                    head = insert_node (head, NULL, indata); //整包丟進indata, 不用傳三次
                }
                else { //第二到第n個節點
                    ptr = head;
                    //while(ptr->next != NULL){ //希望加在最後面，所以
                    while(ptr->next != NULL){
                        ptr = ptr->next; //把ptr移到指向最後一個節點
                    }
                    head = insert_node (head, ptr, indata); //把節點加入到，ptr之後，也就是最後一個節點
                }
                break;
                
            case 'b':
                //print data
                ptr = head;
                while(ptr!=NULL){
  
                    //printf("姓名：");
                    printf("%s\n", ptr->name);

                    
                    ptr = ptr->next;	
                    puts("");
                }
                
                break;
                
                
            case 'q':
                return 0;
                break;
                
                
        }
        system("pause");
        system("cls");
    }
    
    //free
    ptr = head;
    node *tmp;
    while(ptr!=NULL){
        tmp = ptr->next;
        free(ptr);
        ptr = tmp;	
    }
    
    return 0;
}
